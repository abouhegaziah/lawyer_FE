{"ast":null,"code":"import React from 'react';\nimport { Pagination } from 'react-bootstrap';\n\nvar PaginationControl = function PaginationControl(_ref) {\n  var _ref$page = _ref.page,\n      page = _ref$page === void 0 ? 1 : _ref$page,\n      _ref$between = _ref.between,\n      between = _ref$between === void 0 ? 3 : _ref$between,\n      total = _ref.total,\n      limit = _ref.limit,\n      _ref$changePage = _ref.changePage,\n      changePage = _ref$changePage === void 0 ? function (page) {\n    return console.log(page);\n  } : _ref$changePage,\n      _ref$next = _ref.next,\n      next = _ref$next === void 0 ? true : _ref$next,\n      _ref$last = _ref.last,\n      last = _ref$last === void 0 ? false : _ref$last,\n      _ref$ellipsis = _ref.ellipsis,\n      ellipsis = _ref$ellipsis === void 0 ? 0 : _ref$ellipsis;\n  var total_pages = Math.ceil(total / limit);\n  between = between < 1 ? 1 : between;\n  page = page < 1 ? 1 : page > total_pages ? total_pages : page;\n  ellipsis = ellipsis < 1 ? 0 : ellipsis + 2 >= between ? between - 2 : ellipsis;\n  var positions = Array.from({\n    length: total_pages\n  }, function (v, i) {\n    return i;\n  });\n  var qtd_pages = between * 2 + 1;\n  var range = total_pages <= qtd_pages // Show active without slice\n  ? positions : page - 1 <= between // Show active in left\n  ? positions.slice(0, qtd_pages - (ellipsis > 0 ? ellipsis + 1 : 0)) : page + between >= total_pages // Show active in right\n  ? positions.slice(total_pages - qtd_pages + (ellipsis > 0 ? ellipsis + 1 : 0), total_pages) // Show active in middle\n  : positions.slice(page - 1 - (between - (ellipsis > 0 ? ellipsis + 1 : 0)), page + (between - (ellipsis > 0 ? ellipsis + 1 : 0)));\n  return total !== null && total > 0 ? React.createElement(Pagination, {\n    className: \"justify-content-md-center\"\n  }, last && React.createElement(Pagination.First, {\n    onClick: function onClick() {\n      return page > 1 ? changePage(1) : {};\n    },\n    disabled: page <= 1\n  }), next && React.createElement(Pagination.Prev, {\n    onClick: function onClick() {\n      return page > 1 ? changePage(page - 1) : {};\n    },\n    disabled: page <= 1\n  }), total_pages > between * 2 + 1 && ellipsis > 0 && positions.slice(0, page - 1 <= between ? 0 : ellipsis).map(function (value) {\n    return React.createElement(Pagination.Item, {\n      key: value,\n      onClick: function onClick() {\n        return value !== page - 1 ? changePage(value + 1) : {};\n      }\n    }, value + 1);\n  }), // Show ellipsis when \"page\" is bigger than \"between\"\n  total_pages > between * 2 + 1 && ellipsis > 0 && page - 1 > between && React.createElement(Pagination.Ellipsis, {\n    disabled: true\n  }), range.map(function (value) {\n    return React.createElement(Pagination.Item, {\n      active: value === page - 1,\n      key: value,\n      onClick: function onClick() {\n        return value !== page - 1 ? changePage(value + 1) : {};\n      }\n    }, value + 1);\n  }), // Show ellipsis when \"page\" is lower than \"between\"\n  total_pages > between * 2 + 1 && ellipsis > 0 && page < total_pages - between && React.createElement(Pagination.Ellipsis, {\n    disabled: true\n  }), total_pages > between * 2 + 1 && ellipsis > 0 && positions.slice(page >= total_pages - between ? total_pages : total_pages - ellipsis, total_pages).map(function (value) {\n    return React.createElement(Pagination.Item, {\n      key: value,\n      onClick: function onClick() {\n        return value !== page - 1 ? changePage(value + 1) : {};\n      }\n    }, value + 1);\n  }), next && React.createElement(Pagination.Next, {\n    onClick: function onClick() {\n      return page < total_pages ? changePage(page + 1) : {};\n    },\n    disabled: page >= total_pages\n  }), last && React.createElement(Pagination.Last, {\n    onClick: function onClick() {\n      return page < total_pages ? changePage(total_pages) : {};\n    },\n    disabled: page >= total_pages\n  })) : React.createElement(React.Fragment, null);\n};\n\nexport { PaginationControl };","map":{"version":3,"sources":["../src/index.tsx"],"names":["PaginationControl","page","between","total","limit","changePage","console","next","last","ellipsis","total_pages","Math","positions","length","qtd_pages","range","className","RBPagination","onClick","disabled","key","value","active","React"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Pagination as RBPagination } from 'react-bootstrap';\n\nexport type PaginationControlProps = {\n  page?: number,\n  between?: number,\n  total: number,\n  limit: number,\n  changePage?: (page: number) => any,\n  next?: boolean,\n  last?: boolean,\n  ellipsis?: number\n}\n\nexport const PaginationControl = ({\n  page = 1,\n  between = 3,\n  total,\n  limit,\n  changePage = page => console.log(page),\n  next = true,\n  last = false,\n  ellipsis = 0\n}: PaginationControlProps) => {\n\n  const total_pages = Math.ceil(total / limit)\n  between = between < 1 ? 1 : between\n  page = (page < 1 ? 1 : page > total_pages ? total_pages : page)\n  ellipsis = ellipsis < 1 ? 0 : ellipsis + 2 >= between ? between - 2 : ellipsis\n\n  let positions = Array.from({ length: total_pages }, (v, i) => {\n    v\n    return i\n  })\n\n  const qtd_pages = (between * 2) + 1\n  const range = (\n    total_pages <= qtd_pages\n      // Show active without slice\n      ? positions\n      : page - 1 <= between\n        // Show active in left\n        ? positions.slice(0, qtd_pages - (ellipsis > 0 ? ellipsis + 1 : 0))\n        : page + between >= total_pages\n          // Show active in right\n          ? positions.slice(total_pages - qtd_pages + (ellipsis > 0 ? ellipsis + 1 : 0), total_pages)\n          // Show active in middle\n          : positions.slice((page - 1) - (between - (ellipsis > 0 ? ellipsis + 1 : 0)), page + (between - (ellipsis > 0 ? ellipsis + 1 : 0)))\n  )\n\n  return (\n    total !== null && total > 0\n      ? <RBPagination className=\"justify-content-md-center\">\n        {\n          last\n          && <RBPagination.First\n            onClick={() => page > 1 ? changePage(1) : {}}\n            disabled={page <= 1} />\n        }\n        {\n          next\n          && <RBPagination.Prev\n            onClick={() => page > 1 ? changePage(page - 1) : {}}\n            disabled={page <= 1} />\n        }\n        {\n          total_pages > (between * 2) + 1 && ellipsis > 0\n          && positions.slice(0, page - 1 <= between ? 0 : ellipsis).map(value => {\n            return <RBPagination.Item key={value}\n              onClick={() => value !== page - 1 ? changePage(value + 1) : {}}>\n              {value + 1}\n            </RBPagination.Item>\n          })\n        }\n        {\n          // Show ellipsis when \"page\" is bigger than \"between\"\n          total_pages > (between * 2) + 1 && ellipsis > 0 && page - 1 > between\n          && <RBPagination.Ellipsis disabled />\n        }\n        {range.map(value => {\n          return <RBPagination.Item active={value === page - 1}\n            key={value}\n            onClick={() => value !== page - 1 ? changePage(value + 1) : {}}>\n            {value + 1}\n          </RBPagination.Item>\n        })}\n        {\n          // Show ellipsis when \"page\" is lower than \"between\"\n          total_pages > (between * 2) + 1 && ellipsis > 0 && page < total_pages - between\n          && <RBPagination.Ellipsis disabled />\n        }\n        {\n          total_pages > (between * 2) + 1 && ellipsis > 0\n          && positions.slice(page >= total_pages - between ? total_pages : total_pages - ellipsis, total_pages).map(value => {\n            return <RBPagination.Item key={value}\n              onClick={() => value !== page - 1 ? changePage(value + 1) : {}}>\n              {value + 1}\n            </RBPagination.Item>\n          })\n        }\n        {\n          next\n          && <RBPagination.Next\n            onClick={() => page < total_pages ? changePage(page + 1) : {}}\n            disabled={page >= total_pages} />\n        }\n        {\n          last\n          && <RBPagination.Last\n            onClick={() => page < total_pages ? changePage(total_pages) : {}}\n            disabled={page >= total_pages} />\n        }\n      </RBPagination>\n      : <></>\n  )\n}"]},"metadata":{},"sourceType":"module"}